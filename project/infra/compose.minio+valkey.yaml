services:
  minio:
    image: quay.io/minio/minio:RELEASE.2025-07-23T15-54-02Z-cpuv1
    ports:
      - 9002:9002
      - 9003:9003
    restart: always
    environment:
      MINIO_ROOT_USER: ${S3_ACCESS_KEY_ID}
      MINIO_ROOT_PASSWORD: ${S3_SECRET_ACCESS_KEY}
      MINIO_ADDRESS: ':9002'
      MINIO_CONSOLE_ADDRESS: ':9003'
      MC_HOST_local: 'http://${S3_ACCESS_KEY_ID}:${S3_SECRET_ACCESS_KEY}@localhost:9002'
      MINIO_CI_CD: 1
    command: minio server minio_data:/data
    volumes:
      - minio_data:/data
    healthcheck:
      test: mc ready local
      start_period: 5s
      interval: 30s
      timeout: 3s
      retries: 3
    networks:
      - app-network

  createbuckets:
    image: quay.io/minio/minio:RELEASE.2025-07-23T15-54-02Z-cpuv1
    depends_on:
      - minio
    restart: on-failure
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      /usr/bin/mc alias set dockerminio http://minio:9002 ${S3_ACCESS_KEY_ID} ${S3_SECRET_ACCESS_KEY};
      /usr/bin/mc mb dockerminio/ec-dev-bucket-1;
      exit 0;
      "
    networks:
      - app-network

  valkey:
    image: valkey/valkey:8.1.3-alpine3.22
    container_name: valkey
    ports:
      - '6379:6379'
    restart: always
    command: >
      valkey-server
      --appendonly no
      --appendfilename "appendonly.aof"
      --requirepass ${REDIS_TOKEN}
      --protected-mode yes
      --bind 0.0.0.0
    volumes:
      - valkey_data:/data
    healthcheck:
      test: ['CMD', 'valkey-cli', '-a', '${REDIS_TOKEN}', 'ping']
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 5s
    networks:
      - app-network

volumes:
  minio_data:
    driver: local
  valkey_data:
    driver: local

networks:
  app-network:
    driver: bridge
